{
  "id": "82417f89-e3a9-4393-b650-83fe28c85340",
  "realm": "custom-realm",
  "displayName": "Custom realm",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 1800,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 3600,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "250061a1-ddb0-4886-ae95-f98151452779",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "82417f89-e3a9-4393-b650-83fe28c85340",
        "attributes": {}
      },
      {
        "id": "25a87ff5-5fe1-4940-8d24-4c05c2faa79d",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "82417f89-e3a9-4393-b650-83fe28c85340",
        "attributes": {}
      },
      {
        "id": "07b350d1-4417-447e-8017-4ad0e59c19ff",
        "name": "default-roles-first-app",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "82417f89-e3a9-4393-b650-83fe28c85340",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "6f6ef5ba-aefa-4ce1-b3d5-434c012189e9",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "11990d5e-dd72-475c-b878-0559517e667d",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "1a241c57-582f-4c5c-80c4-5bef6bddae2f",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "616f9091-9c1c-49d0-ab0e-5ffb7c4086bd",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "70353d86-71f6-4aef-ab60-e6639419a1ad",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "fa1fddc8-9cbb-45cf-af5d-a0eff6c226a0",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "98951925-908c-43d7-88c1-2bb4ae6650d3",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "5477e959-c1a3-465d-a0d8-95a81033f047",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "29c2807d-365b-4403-9505-8bf6770d3342",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "b042a655-5e95-4b13-8246-0aa09aad0e09",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "de388378-e701-4e4a-982a-2c4f8a01e201",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "query-groups",
                "view-authorization",
                "view-clients",
                "create-client",
                "impersonation",
                "manage-events",
                "query-realms",
                "manage-identity-providers",
                "view-users",
                "manage-clients",
                "query-clients",
                "manage-realm",
                "manage-authorization",
                "view-events",
                "view-identity-providers",
                "query-users",
                "view-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "6248bcf8-91ab-49f3-b55c-ee14065365bc",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "0c8eaa14-0681-4688-bb04-a12376b6bdcb",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "a3c3c3cb-1aa6-426c-8730-978937aff606",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "0a1350de-c7cf-41a7-b91b-3f95fb6c9a05",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "22e9680b-4225-4374-935f-5b10aa1fb8ff",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "4d511ac1-c3a4-4597-b086-d12ea2de701f",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "ee6d3449-8030-4f7e-9c90-56871c65df68",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        },
        {
          "id": "b31373ac-c4ab-4cd8-ab78-dbf5502ccf1e",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "b7db3893-07a0-4255-a666-7fc423e92e1f",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2fe3a4ca-7ccf-4bb9-87de-9144c32b23d6",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "d8aaa298-dd3c-44a2-849d-8d0cfb6e809e",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "24ba8aad-0a3d-42a5-882f-f704cf43ab3d",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "7d9f31b3-3e86-40a7-9517-7d73fb7d3d20",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "0154d2e1-7be2-4ad7-9a6a-169ab5393c53",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "c758a9b2-2433-48a4-92ca-dc960dd6a0ce",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "2126ff5f-1d2e-4185-b67b-4e7d3a5182fa",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "c3eb1d60-f64c-4c01-9003-9a62c0418909",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        },
        {
          "id": "d4c93c55-a668-45a7-8afd-fedc1611c1ed",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "93a90254-6de7-446a-bf14-e6b3714b20df",
          "attributes": {}
        }
      ],
      "first-app": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "07b350d1-4417-447e-8017-4ad0e59c19ff",
    "name": "default-roles-first-app",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "82417f89-e3a9-4393-b650-83fe28c85340"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "93a90254-6de7-446a-bf14-e6b3714b20df",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/custom-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/custom-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5651df03-9e8e-4ca8-a47c-75dcadbaa32c",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/first-app/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/first-app/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "111593d7-413f-4260-bff0-e7d9b971b9a4",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ad055cce-960c-4e88-966c-899872ebfe36",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2fe3a4ca-7ccf-4bb9-87de-9144c32b23d6",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0335b4dd-642e-4950-8ac4-c5b92d60342f",
      "clientId": "first-app",
      "name": "First App",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "oBpEImuoqtjWRzFgrqtApmEXvI8uzHIq",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1699895518",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "bd56f213-1ef3-4fad-a388-e267776c7834",
          "name": "User uid",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "LDAP_ID",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "user_uid",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e4ef91d8-c67e-4c4d-9294-ed00c78da5b8",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1d203ee3-3f3f-4517-86b9-97ec2dafdad6",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/custom-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/custom-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "12f5cac7-e8f2-4520-b26d-1801d5618be4",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "7f6cbab2-1309-4b86-a34f-98214e4d896f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ba4e3325-9407-4fdc-8068-8dac982fcc73",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "39bbc9b7-3651-4f52-b318-3502a128260b",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "fca2254a-cd73-43d1-aa7a-0d3ebc67843c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "a1057acc-4da3-4cd8-ad17-ff5be0a3f8ce",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "91e93a59-e7b5-4707-b097-957826ba7ff1",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "26f19f51-ce7f-47a8-949a-dbe2fe18a6fe",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e6ea0e5e-993a-4e65-b094-f87567db55a7",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bd2c7265-ba91-40e2-b191-4afbc383a448",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9fecfbd4-86e9-4eca-ad3e-e4142bd8c9ba",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "db13de65-fc31-4d59-aa40-2c423a430a4d",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "748081ca-2125-4114-bc6b-820496ec3a47",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7a924884-6156-4926-ae2a-2b8e02fa7d3d",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "017ddb11-8a84-42df-ac85-77fcb0f0573d",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "43f55ce7-93d9-484d-ae28-8b5a18e8df76",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "11bd753a-7dc1-4d22-a35f-1d4a3c783f2f",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "865ea268-5807-46ed-a769-d5ff1d96b0d5",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "79d5b2b8-ee22-47b4-ad2f-7576ee7862e9",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b1c39ea7-da31-4bbf-86c6-4c9b955c5eec",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "211b7557-1cc4-4523-b121-d330c3846364",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23712c46-943c-4504-ab12-fbcecea990ef",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "509378cb-1596-4581-8445-a58fd724f954",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ffcbecb0-531d-42be-b9c9-08c7b5bdcf85",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4de647ab-a6c3-4307-9d6e-046741d0a4c1",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "ed906d57-1652-4289-8669-183ae9300586",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "89d0a3c2-f8fa-4316-b881-c433eabbbb9e",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "f999d957-b93c-4253-9c7e-f671a5636e4b",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "00b3717d-0dcb-4162-8fe4-4519e5d77886",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4c7960db-55a1-489e-90ed-d6b11b854f1e",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "8f2c33ba-435d-41bf-b17a-b1202f78f1c5",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "cff157a6-5c81-40db-85cf-8a18f9a435ea",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "00cd9ab2-1a84-49b0-ab00-1479c5a73a9e",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "239e74d7-6e17-4276-a341-5149ac55b86f",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "5d5f44ee-4718-41b1-a61a-7ee7910dabaa",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "350283a5-8704-4c3c-b476-5752af359ad3",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "a57994d6-dd14-4a61-af07-1f1800353a8e",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ccd79e58-5f4a-4cba-ab48-0f7836ae8128",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "afaf9005-b25b-4589-bb59-e5379231d191",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b36a28ca-dd44-455c-8aef-98c0060905d5",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "596f5845-d793-4a16-a80b-dc66e78558d8",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "09e185df-afb8-4edf-8a8f-b8c17c088274",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "d6dde7b8-290a-4d79-8dbd-25eef71445da",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "246a6f37-cc91-4c5c-bc0c-072dce8c1ec8",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "f70c2948-353a-4d0e-afd2-8ba7c5b0f4e7",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "9af6ccf6-5de4-4f34-b3a5-89dc1e0b36cd",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "id": "cde2c048-2434-495a-af14-d969b17cc9e6",
        "name": "ldap",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "id": "aa8d09ba-9612-4564-bbf3-1b7607e72757",
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "SamAccountName"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            },
            {
              "id": "eaf6ea82-ec92-4afe-8a17-39cfa0503ed3",
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "id": "e08d2515-26f7-4d34-bb19-51f50922a739",
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "modifyTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              }
            },
            {
              "id": "13b5eeab-4a7a-4367-85fc-bb1c2713875c",
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "createTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              }
            },
            {
              "id": "f068c146-c225-4838-9922-8ef12dd4bcdb",
              "name": "full name",
              "providerId": "full-name-ldap-mapper",
              "subComponents": {},
              "config": {
                "read.only": [
                  "true"
                ],
                "write.only": [
                  "false"
                ],
                "ldap.full.name.attribute": [
                  "cn"
                ]
              }
            },
            {
              "id": "b6dc9b0c-b17e-4dd9-830a-6bd90d1f1799",
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            }
          ]
        },
        "config": {
          "fullSyncPeriod": [
            "-1"
          ],
          "pagination": [
            "false"
          ],
          "startTls": [
            "false"
          ],
          "connectionPooling": [
            "false"
          ],
          "usersDn": [
            "ou=users,dc=organization,dc=com"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "importEnabled": [
            "false"
          ],
          "enabled": [
            "true"
          ],
          "bindDn": [
            "cn=admin,dc=organization,dc=com"
          ],
          "usernameLDAPAttribute": [
            "SamAccountName"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "bindCredential": [
            "password"
          ],
          "lastSync": [
            "1699895065"
          ],
          "vendor": [
            "other"
          ],
          "uuidLDAPAttribute": [
            "uid"
          ],
          "connectionUrl": [
            "ldap://openldap"
          ],
          "allowKerberosAuthentication": [
            "false"
          ],
          "syncRegistrations": [
            "false"
          ],
          "authType": [
            "simple"
          ],
          "krbPrincipalAttribute": [
            "krb5PrincipalName"
          ],
          "searchScope": [
            "2"
          ],
          "useTruststoreSpi": [
            "always"
          ],
          "usePasswordModifyExtendedOp": [
            "false"
          ],
          "trustEmail": [
            "false"
          ],
          "userObjectClasses": [
            "user,inetOrgPerson, organizationalPerson"
          ],
          "rdnLDAPAttribute": [
            "dn"
          ],
          "editMode": [
            "READ_ONLY"
          ],
          "validatePasswordPolicy": [
            "false"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "6fca9005-564a-4b7a-a064-3a2727a1c7a9",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAmlSdsYwgVOju0eWgGjxX4QG3OTP1srGpIXrXT+jcqVdCR2++s5/KGEBaqMGWuVbqJ61mAQ1/6Ikgymoom1Oha2KV+sEfi3ZMvI/dfvd8q2OewMHBAiUaYKg/be7UjWT8H8ZEtAqhanXMCXS+ET+847b8d3ty/d8gz8RDqHWR62kfQaYzPTEznHnz8DF7Bh9xqe7NyfNjfky3FjzCdnyX7kW3mh3oUgJYXzm0p1m9mofC/uu0iVGE64X0478lL+IQp+a6DleuYwgVoHhUsoFujKph8vyeSOltl41+QNPznT/Q9Eegtubbv2xXmUjLn43Ye8EuBzihnNsiZJn0fhDOGwIDAQABAoIBAAocUAZxNS8K4ZZ7siz11hYGHEBRoJ+X1wo7934jNc2cS1nNvtMavU0wbiAPKrYytP1rdTrNbRtJXI4WPVnLtVAJMeUvIMdstSNHU439XbwGt0BOkTv4PU2myB0GIAOxYXkdbqPS7HdCh175OHh90fyjINAdFM///bDO3VXcefZPny+qGr5QSaLrSfAGGfqPlFM4v2FhMw7u8b/cbJy4c2XlErhTfCwlTc6QsNHlCMvrogVNaArmOoZ1YxKTubLMGrrsNFJ5QV0ltQLlGPmkQLkq8NCZ78DOHqOQDmTYK2M9jStx27O+p4vENmx6LY5shfb/c9Lv1L5abV7lQWrDQJkCgYEAzP4m99P9nilYnk28a4BRd0TNHflfGU1ByDkYuaqdxpCPyW2cJ4DATzaWcXNKxL30hZ+R8Tui8uVgagfYAwYnXNQNcnO6jG8BdFB09HbWgKyMDJPLjVXU/ZbH4uJ9HiBPPOTnWSww6Jf/bCAKPF/8MvRswQbWLLdROx2dzf8mksMCgYEAwLtTcWgB1GbDMfXPipvcxZvkkKcx2kR69SLVAMSm6Y2e/2lXiey/GiE+kA4OZO9FlOflcZlUc6JHrQa5xa7p3TxJLmbay2nPljdaDHIXfA5ZEK5rFwvzd9zWEOU1CuM66AMmu4lCK6dGoRSAeRdvwaP8CtXkfO9d22SFiZ8K8ckCgYEAlXXMpa8L4FBXC3y0H1E8lJA2WV9jZgg9KSXwEBcE2Cy4mW1wiCDIlji/sdIUtqOk7/QrLU6E/UIebNBxP6sx8e2uLD+SySd6UPsEeuVWehTUO6taox7sn0RbUuI9xURbYZOn1g1xT3TbR1OJAwIc2G38CTTZ3Vp/QHHUh8g7sI8CgYApPGtACmbJ0SrWV6eOGocD6LTglkU+VASSyl8UiP7FXb21HA7UvcitiItgOwGtatxSXcNjqNC+5Ou9A4Ff4Gq9IRbvTKZnez4k/7bOjuKjclZwEUFsbuwqqx9KAiB1MeT6myIAYf+8Y0/jSwWp4u/QWIumrdjzOiu0sy83IMYwsQKBgQCNdBIYqmJYcUfXEcYXCf4ZIRh/lgxYAYHa++sYFXNZNbFcADvUCrZdEuQL22eftxnr0Ui9c4iBlQAovz+fL6gRIz7vp0J47CMMDNC8XU17WB+6YqhPv91thUymECeayBk2hapDuCDTQhc6F2IarBb+6pxv9f4+ZdoiWV05qeqacg=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGLyZ1cujANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlmaXJzdC1hcHAwHhcNMjMxMTEzMTY1NTE1WhcNMzMxMTEzMTY1NjU1WjAUMRIwEAYDVQQDDAlmaXJzdC1hcHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCaVJ2xjCBU6O7R5aAaPFfhAbc5M/WysakhetdP6NypV0JHb76zn8oYQFqowZa5VuonrWYBDX/oiSDKaiibU6FrYpX6wR+Ldky8j91+93yrY57AwcECJRpgqD9t7tSNZPwfxkS0CqFqdcwJdL4RP7zjtvx3e3L93yDPxEOodZHraR9BpjM9MTOcefPwMXsGH3Gp7s3J82N+TLcWPMJ2fJfuRbeaHehSAlhfObSnWb2ah8L+67SJUYTrhfTjvyUv4hCn5roOV65jCBWgeFSygW6MqmHy/J5I6W2XjX5A0/OdP9D0R6C25tu/bFeZSMufjdh7wS4HOKGc2yJkmfR+EM4bAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACJSigdC0bTmAQUDXkFSH3chgBt76yQpwWcOIj/0MFL4oil7WYUWMRNBrpjbLdBufP06uKl+CjKjUd3cTJreN7BGfHsxnfJhJ6MeagPaLm6t676LsENNoKHinpBoagMsEZXr/7bt4wofj3kgbwpwTIwVtRrwWMWqFWi2WVrrcPu7m5JhGvFTQ07IGHyg6BJpCFH9TPmQouo3JVJa94JwSpGjcmrKU6b0T1dmk/zCgoouvl8YbaZUInviYJbxDF/5ga9nViKz9C8YYw3sssoTV6FkBxUkINo6JA/LX56kh+EhfAZMk3FkkWaK9N+MtUHK5Jx+/qVJrwatpTgPKNuY3sU="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "32935f2b-8be8-42c5-830a-8c15f374a1a7",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "9683337d-76cb-407a-92d1-a0ea3b3e4a91"
          ],
          "secret": [
            "aab1ongzTS6zvntgEPUhLJ_mcj3vlJdjrUEn1eE6TElnA7owgMkQ0xKnPkWQLjT6p55LNH3CHYO1ED_4cPH2AA"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "21ab1928-62ec-4b2c-a496-9335a7b1a414",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "af1ad435-82c4-44af-b0d4-1e790360bba1"
          ],
          "secret": [
            "Cu5915fY7spBkzrp_tairA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "9fe8c683-c7e5-4c37-b9de-803b6280de76",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAuy79NCIAuHN3zqLF6O3kjGWA9qfrHil2QRkNPNPVZvHIxXlzGAt06QyQjV+KnlQy5DXknbQyw8piQjsyHZfyFZEXemOFUOxAABOMf9EN0o/9gbB77jfOTajymnxt6sCA6x3GZ2cBfAl084wh12vBuZsSx8aPFHwPwb57HFpvG0QiGuDbJkDfimc5+YKdoA9jEf2tQdeKqFMIrl7WMp7/Hpfl2YZ2p7yqQVlq9Q6WZZruPtls2ouOhztSeqkMDEVNwx6zQlVJEtZ56pgWJVu5dVfpXkNotJP+p5U1+ZyXSqn74kC6AHUqohs1zMkmuo0tLBwQEoAyDTI3b6/dSuOg1QIDAQABAoIBACBiyeZaN7uyJrl2yj0548Ay07RZa0GltNMgjXzHvfV4wd8A21v+p3Sm+t+q9yXbtY5skKiEhAACJSwGZ+5c2sLGfsRrMabFqXEZ8MYwmm6jAR6ONXMK7sPbBlaaTr4+HlAPr8M2PDiEvlphFX3bJAKEBSTRgvHtYSCJX22RbAXQYNNjq1rZCV0zaxNjRXWUPXGuGKhMHy7qVLXTfwgwUlaTuXfdZtF2ARJFw0r094XOp/t+ze0dPzFxhxrDrQzTG//NFZ+NkROQDIk8eAMb9OR3hQbhiELb+6mDfxUpPvWSKrQoeAj8FKMBXd4AvDVNQ2OGopHcsDv8aLB2LcfQQgECgYEA851xlO9pHjUtWkRZ8xDfM9uAUKDUKUof5/UbQuF4dgpc2PToHpGU1Pd5fqahNZoCgdqt3XLTfNkJT69funyrUKwdJT593k15MSpstbJl1J+Wg7/CZ4SA7r92yGKCEFIC+yB5F1ailZ8hij7347teQ4PQDLmGeMpLIQUJPb8tW4ECgYEAxLMciRkZoUSunO3umg8X6edHDoD7Q62ueWE7VowF8e28TWeXIGo2rUDeyA3Z8JfMwvKoeAozjtqiEgysl/eWW5OPqsN+LcPfGXINl5dsSZBScVPaFw5Wx/zonR9ZG5l3EN6bT/+5qmmh8GH7YrGqe7wqApGXtwiYMD9ftB0Pv1UCgYEAk3cvxP7zO6Tm8ihD5r3EzshFMQlZxDCphai6Os7vM0zsjSwawj5PwGaZdc/5789tSxuLeWxDluRuHX1ETkefEDNPZTchzApLnTZYHdiCiaWc392ZGT59KYhep8fxgV2Tjl5GzpjTzAxKqjuZpJHL6sSEkN9RBhc2SSOaR3VNSIECgYEAupBn8GEuPhe2xoGmXdkTBXenncoYiAikA9yFO4Fz4hNrFr+6R7R2R73PkFAS9nAEdqNRxwll/YjBT/1Vdo4Ovq0nBwCFHUM6yBe1bKLiwqNwjqzJnjSreuQWfXDOQ687j3SUOzyCDXBDeIx2sxVwbgv6jJUrIR+1uY1iaKNn3EECgYBni4XV9eqVPHFkhGlvTSescCBcmrSZtIW1N28+VLuRk5dNrMEodYbJGmWqX5s4KDj1AnWO+Pyr2iW9pTAcIfT2bLQhOj+CvEsUPBpI7kt8K3Md2O+YgVQeCuozzY1W24LKjiZEZsV5uQBz9XF0hXvCVHxWw9R/hqm+EeOSLRq8/Q=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGLyZ1cTzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlmaXJzdC1hcHAwHhcNMjMxMTEzMTY1NTE1WhcNMzMxMTEzMTY1NjU1WjAUMRIwEAYDVQQDDAlmaXJzdC1hcHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7Lv00IgC4c3fOosXo7eSMZYD2p+seKXZBGQ0809Vm8cjFeXMYC3TpDJCNX4qeVDLkNeSdtDLDymJCOzIdl/IVkRd6Y4VQ7EAAE4x/0Q3Sj/2BsHvuN85NqPKafG3qwIDrHcZnZwF8CXTzjCHXa8G5mxLHxo8UfA/BvnscWm8bRCIa4NsmQN+KZzn5gp2gD2MR/a1B14qoUwiuXtYynv8el+XZhnanvKpBWWr1DpZlmu4+2Wzai46HO1J6qQwMRU3DHrNCVUkS1nnqmBYlW7l1V+leQ2i0k/6nlTX5nJdKqfviQLoAdSqiGzXMySa6jS0sHBASgDINMjdvr91K46DVAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJ6lVBM9q1IDyZzBUh1UfiFYTxTST/p3l/kAbUKbAG3iRC+lsz3GGGMkXpf0thJxLt9smI/M32TA8oowYdmCcFqeJFwCoI6i2aizgLpn7GRePxBpZIFLni5V6PXQIBthVtfbiUNfMGf/saSMoGg6DRXY2gJgAag/2T+XUBP6FdqOgSbsUswbydcRBbso1E72/ML6BlG8kAkus+5OkurEyKLoVGtGFTdrhss8aizn2xYAM66dxORovom+oGc0S8BqS+Q3ddcIJuZbfIhsvY5/YcEzljrUFe4ygwy8GInuQXMf8Z4N4UASG5D9SVsnuF8zQFV8fhyA74dJ41ZS7DRBwdI="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "835d5de0-75e8-4eac-9ccf-27887bf58e26",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bdcf6407-9b09-45de-a8d3-5e1b471950bd",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fce7c2c1-a740-404b-bacd-f3eb6154995f",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "03684a22-a163-4167-b1c5-8905812660ca",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "da9a51d0-279b-450c-b159-03a53b149bdb",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e8becedb-9ebd-4701-9231-7774ca101bd6",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3d4baade-1912-4bc3-9fcf-8c95266b6362",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c6dd17d0-d2d4-424b-a730-20ceb57193e0",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0e2cc52e-a3b4-44bb-84a3-f4f44b35c878",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c1c61505-c4ae-416e-b2e5-0b796c2624e3",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5a1d0b42-91b1-4929-ab49-9ad0bc47c05f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6170b3a7-6353-4ec9-999c-5d60ee535827",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0b938c07-2035-4653-b127-151a52240f7a",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c73136c5-a9c7-4a5b-9e6e-2b959b0705ad",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7bbb454d-513b-4bd8-b10e-874e0ddfe5aa",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1e25d792-5362-4296-9c06-31cfe011e0eb",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8b6b35a6-a17d-4c29-a1d3-c44bf3f9e3d2",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9a40943a-4a3d-46fc-b7a7-c0212e0a048e",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "dd69f8d7-802e-4afb-8f51-cd68ef8ece92",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "82e36718-6db7-4c67-a460-5e0db2690d56",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-execute-actions": "",
    "actionTokenGeneratedByUserLifespan-verify-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-reset-credentials": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "actionTokenGeneratedByUserLifespan-idp-verify-account-via-email": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}",
    "shortVerificationUri": ""
  },
  "keycloakVersion": "22.0.5",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}